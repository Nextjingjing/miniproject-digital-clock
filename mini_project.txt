library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

entity mini_project is
    port (
        Clock           : in  std_logic;    -- System clock input
        reset           : in  std_logic;    -- Reset input
        led_out         : out std_logic;    -- LED output
        seven_seg_min1  : out std_logic_vector (6 downto 0); -- 7-segment for Minutes (first digit)
        seven_seg_min2  : out std_logic_vector (6 downto 0); -- 7-segment for Minutes (second digit)
        seven_seg_hur1  : out std_logic_vector (6 downto 0); -- 7-segment for Hours (first digit)
        seven_seg_hur2  : out std_logic_vector (6 downto 0)  -- 7-segment for Hours (second digit)
    );
end entity mini_project;

architecture Behavioral of mini_project is
    -- Internal signals
    signal Seconds    : integer := 0;
    signal Minutes    : integer := 0;
    signal Hours      : integer := 0;
    signal Min_pin1   : signed(3 downto 0) := "0000";
    signal Min_pin2   : signed(3 downto 0) := "0000";
    signal Hur_pin1   : signed(3 downto 0) := "0000";
    signal Hur_pin2   : signed(3 downto 0) := "0000";

    -- Constants
    constant ClockFreq : integer := 10000000; -- 10 MHz clock frequency

begin
    -- Instance of Digital_clock
    digital_clock_inst: entity work.Digital_clock
        generic map (
            ClockFreq => ClockFreq
        )
        port map (
            Clock     => Clock,
            reset     => reset,
            Seconds   => Seconds,
            Minutes   => Minutes,
            Hours     => Hours,
            Min_pin1  => Min_pin1,
            Min_pin2  => Min_pin2,
            Hur_pin1  => Hur_pin1,
            Hur_pin2  => Hur_pin2
        );

    -- Instance of Led_Control
    led_control_inst: entity work.Led_Control
        generic map (
            ClockFreq => ClockFreq
        )
        port map (
            Clock    => Clock,
            reset    => reset,
            seconds  => Seconds,
            led_out  => led_out
        );

    -- Instance of BDC_to_7_segmen for Minutes (first digit)
    bdc_to_7seg_min1: entity work.BDC_to_7_segmen
        port map (
            BCD_i     => std_logic_vector(Min_pin1),  -- Convert signed to std_logic_vector
            clk_i     => Clock,
            seven_seg => seven_seg_min1
        );

    -- Instance of BDC_to_7_segmen for Minutes (second digit)
    bdc_to_7seg_min2: entity work.BDC_to_7_segmen
        port map (
            BCD_i     => std_logic_vector(Min_pin2),  -- Convert signed to std_logic_vector
            clk_i     => Clock,
            seven_seg => seven_seg_min2
        );

    -- Instance of BDC_to_7_segmen for Hours (first digit)
    bdc_to_7seg_hur1: entity work.BDC_to_7_segmen
        port map (
            BCD_i     => std_logic_vector(Hur_pin1),  -- Convert signed to std_logic_vector
            clk_i     => Clock,
            seven_seg => seven_seg_hur1
        );

    -- Instance of BDC_to_7_segmen for Hours (second digit)
    bdc_to_7seg_hur2: entity work.BDC_to_7_segmen
        port map (
            BCD_i     => std_logic_vector(Hur_pin2),  -- Convert signed to std_logic_vector
            clk_i     => Clock,
            seven_seg => seven_seg_hur2
        );

end architecture Behavioral;
